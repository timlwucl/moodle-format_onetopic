{"version":3,"file":"defaultsection.min.js","sources":["../src/defaultsection.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package   format_onetopic\n * @copyright 2021 David Herney Bernal - cirano\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Default section initialization.\n *\n * This will click on tab 1 to reveal its content on loading the page when the following criteria are met:\n * - section 0 is rendered above the tabs\n * - the page is called without a specific section id in the URL\n *\n * @method init\n */\nexport const init = () => {\n    // Do this only if section 0 is before the tabs and no section is already set in the URL.\n    const generalSection = document.querySelector('.general-section');\n    const currentUrl = new URL(window.location.href);\n    let nextUrl = new URL(window.location.href);\n    var params = new URLSearchParams(currentUrl.search);\n    const idValue = params.get('id');\n    const sectionValue = params.get('section');\n    if (generalSection && idValue && !sectionValue) {\n        nextUrl.search = currentUrl.search + \"&section=1\";\n        var link = nextUrl.href;\n        var sectionId = 1;\n        // If a section is marked show this by default. This won't exist if tabs are hidden\n        const marked = document.querySelector('.marker .nav-link');\n        if (marked) {\n            const url = marked.getAttribute('href');\n            link = url.split('#')[0]; // Keep only the URL w/o any anchors.\n            sectionId = link.split('section=')[1] ?? 1; // Get the section ID from the URL.\n        }\n\n        let tabsVisible = document.getElementById(\"tabs-tree-start\").classList.contains(\"hastopictabs\");\n        let contentToReplace = \"#tabs-tree-start .onetopic-tab-body\";\n        if(tabsVisible==false) {\n            contentToReplace = \"#tabs-tree-start>div[role='main']\";\n        }\n        let xhrSection1 = new XMLHttpRequest();\n        xhrSection1.responseType = \"document\";\n        xhrSection1.onload = () => {\n            let doc = xhrSection1.response;\n            let tabBody = document.querySelector(contentToReplace);\n            if (tabBody.length){\n                tabBody.textContent = '';\n                tabBody.insertAdjacentHTML(\"beforeend\",\n                    doc.querySelector(contentToReplace).innerHTML);\n            } else { // Follow the Topic navigation element instead\n                const navElement = document.querySelector('#ucl-section-navigation');\n                const linkElement = navElement.querySelector('a');\n                if (linkElement && linkElement.href) {\n                  //  window.location.href = linkElement.href;\n                }\n            }\n            if(tabsVisible) {\n                document.querySelector(\"a.nav-link[href*='section=\" + sectionId + \"#tabs-tree-start']\").classList.add(\"active\");\n            }\n            history.replaceState({}, \"\", xhrSection1.responseURL);\n        };\n        xhrSection1.open(\"GET\", link);\n        xhrSection1.send();\n    }\n};\n"],"names":["generalSection","document","querySelector","currentUrl","URL","window","location","href","nextUrl","params","URLSearchParams","search","idValue","get","sectionValue","link","sectionId","marked","getAttribute","split","tabsVisible","getElementById","classList","contains","contentToReplace","xhrSection1","XMLHttpRequest","responseType","onload","doc","response","tabBody","length","textContent","insertAdjacentHTML","innerHTML","linkElement","add","history","replaceState","responseURL","open","send"],"mappings":"mKA8BoB,WAEVA,eAAiBC,SAASC,cAAc,oBACxCC,WAAa,IAAIC,IAAIC,OAAOC,SAASC,UACvCC,QAAU,IAAIJ,IAAIC,OAAOC,SAASC,UAClCE,OAAS,IAAIC,gBAAgBP,WAAWQ,cACtCC,QAAUH,OAAOI,IAAI,MACrBC,aAAeL,OAAOI,IAAI,cAC5Bb,gBAAkBY,UAAYE,aAAc,CAC5CN,QAAQG,OAASR,WAAWQ,OAAS,iBACjCI,KAAOP,QAAQD,KACfS,UAAY,QAEVC,OAAShB,SAASC,cAAc,wBAClCe,OAAQ,kBAERF,KADYE,OAAOC,aAAa,QACrBC,MAAM,KAAK,GACtBH,+BAAYD,KAAKI,MAAM,YAAY,wCAAM,MAGzCC,YAAcnB,SAASoB,eAAe,mBAAmBC,UAAUC,SAAS,gBAC5EC,iBAAmB,sCACP,GAAbJ,cACCI,iBAAmB,yCAEnBC,YAAc,IAAIC,eACtBD,YAAYE,aAAe,WAC3BF,YAAYG,OAAS,SACbC,IAAMJ,YAAYK,SAClBC,QAAU9B,SAASC,cAAcsB,qBACjCO,QAAQC,OACRD,QAAQE,YAAc,GACtBF,QAAQG,mBAAmB,YACvBL,IAAI3B,cAAcsB,kBAAkBW,eACrC,OAEGC,YADanC,SAASC,cAAc,2BACXA,cAAc,KACzCkC,aAAeA,YAAY7B,KAIhCa,aACCnB,SAASC,cAAc,6BAA+Bc,UAAY,sBAAsBM,UAAUe,IAAI,UAE1GC,QAAQC,aAAa,GAAI,GAAId,YAAYe,cAE7Cf,YAAYgB,KAAK,MAAO1B,MACxBU,YAAYiB"}